/*!
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/**
 * 1. Add vertical space between breadcrumbs,
 *    but make sure the whole breadcrumb set doesn't add space below itself
 */

.ouiBreadcrumbs {
  @include ouiFontSizeS;
  margin-bottom: -$ouiSizeXS; /* 1 */
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  min-width: 0; // Ensure it shrinks if the window is narrow
}

.ouiBreadcrumb {
  display: inline-block;
  margin-bottom: $ouiSizeXS; /* 1 */

  &:not(.ouiBreadcrumb--last) {
    margin-right: $ouiBreadcrumbSpacing;
    color: $ouiTextSubduedColor;
  }
}

.ouiBreadcrumb--last {
  font-weight: $ouiFontWeightMedium;
}

.ouiBreadcrumb--collapsed {
  flex-shrink: 0;
}

.ouiBreadcrumbSeparator {
  flex-shrink: 0;
  display: inline-block;
  margin-right: $ouiBreadcrumbSpacing;
  width: 1px;
  height: $ouiSize;
  transform: translateY(-1px) rotate(15deg);
  background: $ouiColorLightShade;
}

.ouiBreadcrumbs__inPopover .ouiBreadcrumb--last {
  font-weight: $ouiFontWeightRegular;
  color: $ouiColorDarkShade !important; // sass-lint:disable-line no-important
}

.ouiBreadcrumbs--truncate {
  white-space: nowrap;
  flex-wrap: nowrap;

  .ouiBreadcrumb:not(.ouiBreadcrumb--collapsed) {
    max-width: $ouiBreadcrumbTruncateWidth;
    overflow: hidden;
    text-overflow: ellipsis;

    &.ouiBreadcrumb--last {
      max-width: none;
    }
  }
}

.ouiBreadcrumb--truncate {
  @include ouiTextTruncate;
  max-width: $ouiBreadcrumbTruncateWidth;
  text-align: center;
  vertical-align: top; // overflow hidden causes misalignment of links and slashes, this fixes that
}


/* new style global breadcrumb when @useCascadia is true */

$osdHeaderBreadcrumbCollapsedLink: #002a3a;
$osdHeaderBreadcrumbMidnightSkyMediumLightColor: #96a0a5;

$firstBreadcrumbPolygon: polygon(
  0% 0%,
  100% 0%,
  calc(100% - #{$ouiSizeS}) 100%,
  0% 100%
);
$breadcrumbPolygon: polygon(
  $ouiSizeS 0%,
  100% 0%,
  calc(100% - #{$ouiSizeS}) 100%,
  0% 100%
);

.ouiBreadcrumb-New{

 filter:url('./public/assets/round-filter.svg#round');


.ouiBreadcrumb{

  clip-path: $breadcrumbPolygon;
  padding: $ouiSizeXS - 2.5 $ouiSizeM;
  background-color: $osdHeaderBreadcrumbSecondBackground;
  &:hover {
    color:$osdHeaderBreadcrumbHoverColor;
  }
  &:first-child {
    clip-path: $firstBreadcrumbPolygon;
  }
  &:last-child {
    background-color: $osdHeaderBreadcrumbFirstBackground;
    &:hover{
      color: inherit;
    }
  }
  
}
.ouiBreadcrumb--collapsed{
  color: $ouiColorGhost;
  background: $ouiColorEmptyShade;
}
.ouiLink.ouiLink--subdued:hover{
  color:$osdHeaderBreadcrumbHoverColor;
}

}
